##
# Ansible playbook for setting up a Git Drupal Development Workflow on an
# Ubuntu 12.04 server.
#

---
- hosts: all
  gather_facts: no

  vars:
    www_dir: '/var/www'
    git_dir: '/var/git'

  vars_files:
    - settings.yml

  tasks:
    ##
    # Installation of required software.
    #
    - name: All | Install required packages.
      apt: pkg=$item state=installed
      with_items:
        - apache2
        - libapache2-mod-php5
        - mysql-server
        - php5-mysql
        - php5-gd
        - php5-dev
        - php5-curl
        - php-apc
        - php5-mcrypt
        - php5-xmlrpc
        - php-soap
        - memcached
        - php5-memcache
        - make
        - unzip
        - curl

    ##
    # Drush install, a Drupal shell tool.
    #
    - include: tasks/ubuntu-drush.yml

    ##
    # Create the basic users, git to own the repos, and a regular user.
    #
    - name: Users | Create git user
      user: name=git createhome=yes home=$git_dir generate_ssh_key=yes

    - name: Users | Create regular user
      user: name=${user_account} createhome=yes home=/home/${user_account} generate_ssh_key=yes

    ##
    # Install the Gitolite Git repository access manager
    #
    - name: Gitolite | Automatic generate SSH Key for root
      command: ssh-keygen -b 4096 -t rsa -f /root/.ssh/id_rsa -P "" creates=/root/.ssh/id_rsa

    - name: Gitolite | Add localhost to authorized_keys
      shell: ssh-keyscan -t rsa localhost >> /root/.ssh/known_hosts

    - name: Gitolite | Copy root key to /tmp
      copy: src=/root/.ssh/id_rsa.pub dest=/tmp/root.pub owner=root group=root mode=644

    - name: Gitolite | Create bin directory for the git user
      file: path=$git_dir/bin state=directory owner=git group=git

    - name: Gitolite | Clone Gitolite repository
      shell: su - git -c "git clone https://github.com/sitaramc/gitolite.git" creates=${git_dir}/gitolite/.git/HEAD
      # Some information says sudo_user will work, but no.
      #git: repo=https://github.com/sitaramc/gitolite.git dest=/usr/local/src/gitolite version=v3.4
      #sudo_user: git

    - name: Gitolite | Checkout the correct tag, v3.4
      shell: su - git -c "cd gitolite;git checkout v3.4;"

    - name: Gitolite | Install gitolite
      shell: su - git -c "gitolite/install -ln ${git_dir}/bin" creates=${git_dir}/bin/gitolite
      #command: /usr/local/src/gitolite/install -ln ${git_dir}/bin creates=${git_dir}/bin/gitolite
      #sudo_user: git

    - name: Gitolite | Setup gitolite with root's key
      shell: su - git -c "bin/gitolite setup -pk /tmp/root.pub" creates=${git_dir}/repositories/gitolite-admin.git/index
      #command: ${git_dir}/bin/gitolite setup -pk /tmp/root.pub creates=${git_dir}/repositories/gitolite-admin.git/index
      #sudo_user: git

    - name: Gitolite | Clone the gitolite-admin repo to root
      git: repo=git@localhost:gitolite-admin dest=/root/gitolite-admin

